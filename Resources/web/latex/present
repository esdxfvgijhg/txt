
#######################################"

Hello everyone,
	It's a pleasure for me to be here today to talk about my work which could interest those who work on networking and esspicialy in security.
So before starting my presentation, I present myself. My name if Aghiles DJOUDI I am a PhD student at ESIIE school on Paris and My work is named ...
Very often when we talk about IoT we refer to ...
My talk today will be focused on ...

So, before gooing in depth of my work,
	lets start by giving a big overview of IoT.




################   Context:

1) First of all,
	what is IoT or internet of things.

IoT is ...  it could be seen as 



################   Problematique:



Now, statistics show that 

This is due to the lack of means of 



################   Goal technical:



My goal is rightly to build a framework that 



################   Motivations imagination:


My motivation is to make this sollution available 


################   Challenges technical :

Now, the first difficulty is that there is a bunch of possible configuration



################   Contributions:





################   Related work:

The previous searches have attempted to fix the MAC spoofing problem in different ways: 2 1) The first approach tries to avoid the problem by building a robust identification protocol,
	however this approach is not really efficient because the authentication is made only in a one single sense or direction,
	so the attacker can attack the access point,
	for example,
	since it is not authenticated by the clients.

2) The second approach is to decide whether there is an attack or not based on the sequence number that is used to order segments or packets and detect the packets losses.
If,
	for example,
	the difference between the sequence number exceeds a threshold,
	it will be considered as an attack.
But in reality we can not distinguish between a real attack or a loss of packet so it increases the number of false positive alerts.

3) The third approach tries to do better by studying the sequence number,
	but this time by studying the variation of the sequence number to know if the sequence number is linear or not.
3 So as you've noticed,
	it's very hard to detect MAC spoofing attacks,
	and the difficulty is due to false positives alerts and the variety of attacks and consequently their different behaviors and their impact on the network and also the low effectiveness of the threshold approach.

################  Approach:

The solution that I propose to you today is to use the neural network to precisely study the behavior of the sequence number and to try to distinguish between the real attack and the packet losses to decrease the false positive alerts.



4 The neuron network:
	as you can see the neural network consists of 3 layers,
	input layer,
	hidden layer and output layer,
	the hidden layer can have one or more sublayer,
	here there are 2 hidden sublayer,
	each layer has a finite neuron number.


################  Step 1:

1) The first step to use the neural network is to setup the neuron number in the network.
To know how many neuron is needed in each layer,
	we start by putting one neuron in each layer and increase the number of neurons in each layer until a criterion of performance is satisfied.

For my work I needed 7 neuron in the first layer .....


################  Step 2:

5 2) Now the second step is the learning phase:
	so here we have our neuron network,
	the input is the sequence number we retrieved from TCP segment header,
	before putting these sequence numbers directly in the neural network,
	we calculate the gaps between these sequence number and calculate the percentage of each gap and fed them to the neuron network,
	and each percentage is assigned a label to determine whether it is a normal or spoofed traffic.
As output we will have the result of the first iteration of learning,
	we compare the labels we have chosen in the input with the output one and we calculate the error function,
	we adjust our weights with the learning algorithms that I will present in the next slide and we go to the next iteration until having as few errors as possible.

################  Step 3:

6 I used 3 learning algorithms based on the gradient function,
	to converge to the local minimum or the minimum errors possible.
We have to choose the size of the step and the sense of convergence (positive or negative).
The difference between the 3 algorithms is due to the size of step.

################  Experimentation:

1) For the first algorithm the size of the step is fixed from where the name of the algorithm.
2) For the second algorithm the size of the step is variable and uses function change the step value by using dichotomy function.
3)  The third algorithm change the size of the step randomly.


################  Results:

7 For the results we made a table to compare errors provided by each algorithms and the time that will take to give the output result.

The neural network formed using the variable pitch gradient descent algorithm gives the lowest mean absolute error (MAE).

The constant pitch gradient descent method requires a significant amount of time to train,
	while providing a higher error rate than the other two algorithms.


8 The performance of intrusion detection system is generally evaluated by their sensibility and specificity  sensibility mean how many true positive alerts we detected from all positive alerts and and specificity is the the number of true negative alerts from all negative alerts.

To do the experience I used samples of 1000 segments of 3 connections.
And I find 69% of sensibility and 0.21 of 21% of specificity.
The perfect intrusion detection system represented in the curve by one,
	we can see that my intrusion detection system is little bit closest to perfect one.


################  Conclusion

To coclude,








